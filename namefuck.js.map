{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/browser.js","namefuck.js","src/namefuck.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","global","window","this","define","amd","./namefuck.js","2","parse","str","getc","c","charCodeAt","comment","symbols","symdic","out","endl","semi","perc","ca","cz","cA","cZ","c0","c9","starti","cursym","adjust","wasL","isL","push","len","com","sym","adj","naiveAdr","ret","build","adr","p","adrs","lastadr","last","substring","newadr","shift","count","Math","abs","j","mov","state","b","format","cop","tmp","setn","Array","join","setc","test","whi","ctrl","mif","tmp1","tmp2","melse","Exception","end","pop","name","pprocess","comments","replace","match","reg","lasti","exec","args","split","map","Function","trim","endi","lastIndex","splice","ms","Object","keys","apply","compile","namefuck","String","prototype","arguments","number","if","else"],"mappings":"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","file":"namefuck.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var global = typeof window === 'object' ? window : this;\nglobal['namefuck'] = require('./namefuck.js');\nif(typeof define === 'function' && define.amd) {\n  define([], function() {\n    return global['namefuck'];\n  });\n}","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar global = typeof window === 'object' ? window : this;\nglobal['namefuck'] = require('./namefuck.js');\nif(typeof define === 'function' && define.amd) {\n  define([], function() {\n    return global['namefuck'];\n  });\n}\n},{\"./namefuck.js\":2}],2:[function(require,module,exports){\nvar namefuck = {\n  parse: parse,\n  build: build,\n  pprocess: pprocess,\n  compile: compile\n};\nmodule.exports = namefuck;\n\n//utility functions\nfunction jsonClone(obj) {\n  return JSON.parse(JSON.stringify(obj));\n}\n\nfunction parse(str) {\n  var comment = false;\n  var symbols = [];\n  var symdic = {};\n  var out = [];\n  function getc(c) {\n    return c.charCodeAt();\n  }\n  var endl = getc('\\n'),\n    semi = getc(';'), perc = getc('%'),\n    ca = getc('a'), cz = getc('z'),\n    cA = getc('A'), cZ = getc('Z')\n    c0 = getc('0'), c9 = getc('9');\n  \n  var wasL = false;\n  var starti, cursym, adjust;\n  for(var i=0; i<=str.length; i++) {\n    var c = str.charCodeAt(i);\n    \n    var isL = c>=ca && c<=cz  ||  c>=cA && c<=cZ ||  c>=c0 && c<=c9;\n    \n    if(comment) {\n      if(c===endl || c!==c) {\n        comment = false;\n        out.push({\n          i: starti,\n          len: i-starti+1,\n          com: true\n        })\n      }\n    } else {\n      if(c===semi) {\n        comment = true;\n        starti = i;\n      }\n      if(isL) {\n        if(!wasL) {\n          cursym = str[i];\n          starti = i;\n          if(str.charCodeAt(i-1) == perc) {\n            adjust = true;\n            starti--;\n          }\n        } else {\n          cursym += str[i];\n        }\n      } else {\n        if(wasL) {\n          if(!symdic[cursym]) {\n            symdic[cursym] = true;\n            symbols.push(cursym);\n          }\n          out.push({\n            i: starti,\n            len: i-starti,\n            sym: cursym,\n            adj: adjust\n          })\n        }\n        adjust = false;\n      }\n    }\n    \n    wasL = isL;\n  }\n  return {\n    symbols: symbols,\n    out: out\n  }\n}\n\nfunction naiveAdr(symbols, out) {\n  var ret = {};\n  for(var i=0; i < symbols.length; i++) {\n    ret[symbols[i]] = i;\n  }\n  return ret;\n}\n\nfunction build(str, adr) {\n  var p = parse(str);\n  var out = p.out;\n  var adrs = (adr || naiveAdr)(p.symbols, p.out);\n  var lastadr = 0;\n  var ret = '';\n  var last = 0;\n  for(var i=0; i<out.length; i++) {\n    var sym = out[i];\n    ret += str.substring(last, sym.i); //append each non-symbol string\n    if(!sym.com) {\n      var newadr = adrs[sym.sym];\n      //append the right number of shifts\n      if(!sym.adj) {\n        var shift = newadr >= lastadr ? '>' : '<';\n        var count = Math.abs(newadr-lastadr);\n        for(var j=0; j<count; j++) ret+=shift;\n      }\n      \n      lastadr = newadr;\n    }\n    last = sym.i+sym.len;\n  }\n  ret += str.substring(last, str.length);\n  return ret;\n}\n\nif (!String.prototype.format) {\n  String.prototype.format = function() {\n    var args = arguments;\n    return this.replace(/{(\\d+)}/g, function(match, number) { \n      return typeof args[number] != 'undefined'\n        ? args[number]\n        : match\n      ;\n    });\n  };\n}\n\nfunction gtmp(state) {\n  var i = state.tmp || 0;\n  state.tmp = i+1;\n  return 'ptmp'+i;\n}\nfunction mov(state, a, b) {\n  return '{0}[-]{1}[{0}+{1}-]'.format(a, b);\n}\nfunction cop(state, a, b) {\n  var tmp = 'coptmp';\n  return '{0}[-]{1}[{0}+{2}+{1}-]{2}[{1}+{2}-]'.format(a, b, tmp);\n}\nfunction setn(state, a, n) {\n  //TODO more compact\n  return ('{0}[-]'+Array(1+ +n).join('+')).format(a);\n}\nfunction setc(state, a, c) {\n  if(/^'.'$/.test(c)) c = c[1];\n  return setn(state, a, c.charCodeAt());\n}\nfunction whi(state, a) {\n  state.ctrl.push(['whi', a]);\n  return '{0}['.format(a);\n}\nfunction mif(state, a) {\n  var tmp1 = 'iftmp1'+state.ctrl.length;\n  var tmp2 = 'iftmp2'+state.ctrl.length;\n  state.ctrl.push(['if', tmp1])\n  return ('{0}[{1}+{2}+{0}-]'+\n          '{2}[{0}+{2}-]'+\n          '{1}[').format(a, tmp1, tmp2);\n}\nfunction melse(state) {\n  var tmp = 'elsetmp'+state.ctrl.length;\n  if(state.ctrl[state.ctrl.length-1][0] !== 'if') {\n    throw new Exception('else without if');\n  }\n  var out = '{0}-'+end(state)+'{0}+[';\n  state.ctrl.push(['else', tmp]);\n  return out.format(tmp);\n}\nfunction end(state) {\n  var ctrl = state.ctrl.pop();\n  var name = ctrl[0]\n  if(name === 'whi') {\n    return '{0}]'.format(ctrl[1]);\n  } else if(name === 'if') {\n    return ('{0}[-]'+\n            ']'+\n            '{0}[-]').format(ctrl[1]);\n  } else if(name === 'else') {\n    return '{0}-]'.format(ctrl[1]);\n  }\n}\n\nvar ms = namefuck.ms = {\n  mov: mov,\n  cop: cop,\n  setn: setn,\n  setc: setc,\n  whi: whi,\n  'if': mif,\n  'else': melse,\n  end: end\n};\n\nfunction pprocess(str) {\n  \n  var state = {\n    tmp: 0,\n    ctrl: []\n  };\n  \n  var comments = /;[^\\n]*(?:\\n|$)/g;\n  str = str.replace(comments, '');\n  \n  var reg = /@([a-z]*)(?:\\(([^)]*)\\))?/g;\n  var match;\n  var lasti = 0;\n  var out = '';\n  while((match = reg.exec(str)) !== null) {\n    var name = match[1];\n    var args = match[2] ? match[2].split(',').map(Function.call, ''.trim) : [];\n    var l = match[0].length\n    var endi = reg.lastIndex;\n    \n    out += str.substring(lasti, endi-l);\n    args.splice(0, 0, state);\n    if(!ms[name]) throw new Error('unknown command @'+name+\n      '.\\n options are: '+Object.keys(ms).\n      map(function(s){return '@'+s}).join(', '));\n    if(ms[name].length !== args.length) throw new Error('@'+name+' needs '+\n      (ms[name].length-1)+' arguments (received '+(args.length-1)+')');\n    out += ms[name].apply(null, args);\n    \n    lasti = endi;\n  }\n  out += str.substring(lasti, str.length);\n  return out;\n}\nfunction compile(str) {\n  return build(pprocess(str));\n}\n},{}]},{},[1])\n\n","var namefuck = {\n  parse: parse,\n  build: build,\n  pprocess: pprocess,\n  compile: compile\n};\nmodule.exports = namefuck;\n\n//utility functions\nfunction jsonClone(obj) {\n  return JSON.parse(JSON.stringify(obj));\n}\n\nfunction parse(str) {\n  var comment = false;\n  var symbols = [];\n  var symdic = {};\n  var out = [];\n  function getc(c) {\n    return c.charCodeAt();\n  }\n  var endl = getc('\\n'),\n    semi = getc(';'), perc = getc('%'),\n    ca = getc('a'), cz = getc('z'),\n    cA = getc('A'), cZ = getc('Z')\n    c0 = getc('0'), c9 = getc('9');\n  \n  var wasL = false;\n  var starti, cursym, adjust;\n  for(var i=0; i<=str.length; i++) {\n    var c = str.charCodeAt(i);\n    \n    var isL = c>=ca && c<=cz  ||  c>=cA && c<=cZ ||  c>=c0 && c<=c9;\n    \n    if(comment) {\n      if(c===endl || c!==c) {\n        comment = false;\n        out.push({\n          i: starti,\n          len: i-starti+1,\n          com: true\n        })\n      }\n    } else {\n      if(c===semi) {\n        comment = true;\n        starti = i;\n      }\n      if(isL) {\n        if(!wasL) {\n          cursym = str[i];\n          starti = i;\n          if(str.charCodeAt(i-1) == perc) {\n            adjust = true;\n            starti--;\n          }\n        } else {\n          cursym += str[i];\n        }\n      } else {\n        if(wasL) {\n          if(!symdic[cursym]) {\n            symdic[cursym] = true;\n            symbols.push(cursym);\n          }\n          out.push({\n            i: starti,\n            len: i-starti,\n            sym: cursym,\n            adj: adjust\n          })\n        }\n        adjust = false;\n      }\n    }\n    \n    wasL = isL;\n  }\n  return {\n    symbols: symbols,\n    out: out\n  }\n}\n\nfunction naiveAdr(symbols, out) {\n  var ret = {};\n  for(var i=0; i < symbols.length; i++) {\n    ret[symbols[i]] = i;\n  }\n  return ret;\n}\n\nfunction build(str, adr) {\n  var p = parse(str);\n  var out = p.out;\n  var adrs = (adr || naiveAdr)(p.symbols, p.out);\n  var lastadr = 0;\n  var ret = '';\n  var last = 0;\n  for(var i=0; i<out.length; i++) {\n    var sym = out[i];\n    ret += str.substring(last, sym.i); //append each non-symbol string\n    if(!sym.com) {\n      var newadr = adrs[sym.sym];\n      //append the right number of shifts\n      if(!sym.adj) {\n        var shift = newadr >= lastadr ? '>' : '<';\n        var count = Math.abs(newadr-lastadr);\n        for(var j=0; j<count; j++) ret+=shift;\n      }\n      \n      lastadr = newadr;\n    }\n    last = sym.i+sym.len;\n  }\n  ret += str.substring(last, str.length);\n  return ret;\n}\n\nif (!String.prototype.format) {\n  String.prototype.format = function() {\n    var args = arguments;\n    return this.replace(/{(\\d+)}/g, function(match, number) { \n      return typeof args[number] != 'undefined'\n        ? args[number]\n        : match\n      ;\n    });\n  };\n}\n\nfunction gtmp(state) {\n  var i = state.tmp || 0;\n  state.tmp = i+1;\n  return 'ptmp'+i;\n}\nfunction mov(state, a, b) {\n  return '{0}[-]{1}[{0}+{1}-]'.format(a, b);\n}\nfunction cop(state, a, b) {\n  var tmp = 'coptmp';\n  return '{0}[-]{1}[{0}+{2}+{1}-]{2}[{1}+{2}-]'.format(a, b, tmp);\n}\nfunction setn(state, a, n) {\n  //TODO more compact\n  return ('{0}[-]'+Array(1+ +n).join('+')).format(a);\n}\nfunction setc(state, a, c) {\n  if(/^'.'$/.test(c)) c = c[1];\n  return setn(state, a, c.charCodeAt());\n}\nfunction whi(state, a) {\n  state.ctrl.push(['whi', a]);\n  return '{0}['.format(a);\n}\nfunction mif(state, a) {\n  var tmp1 = 'iftmp1'+state.ctrl.length;\n  var tmp2 = 'iftmp2'+state.ctrl.length;\n  state.ctrl.push(['if', tmp1])\n  return ('{0}[{1}+{2}+{0}-]'+\n          '{2}[{0}+{2}-]'+\n          '{1}[').format(a, tmp1, tmp2);\n}\nfunction melse(state) {\n  var tmp = 'elsetmp'+state.ctrl.length;\n  if(state.ctrl[state.ctrl.length-1][0] !== 'if') {\n    throw new Exception('else without if');\n  }\n  var out = '{0}-'+end(state)+'{0}+[';\n  state.ctrl.push(['else', tmp]);\n  return out.format(tmp);\n}\nfunction end(state) {\n  var ctrl = state.ctrl.pop();\n  var name = ctrl[0]\n  if(name === 'whi') {\n    return '{0}]'.format(ctrl[1]);\n  } else if(name === 'if') {\n    return ('{0}[-]'+\n            ']'+\n            '{0}[-]').format(ctrl[1]);\n  } else if(name === 'else') {\n    return '{0}-]'.format(ctrl[1]);\n  }\n}\n\nvar ms = namefuck.ms = {\n  mov: mov,\n  cop: cop,\n  setn: setn,\n  setc: setc,\n  whi: whi,\n  'if': mif,\n  'else': melse,\n  end: end\n};\n\nfunction pprocess(str) {\n  \n  var state = {\n    tmp: 0,\n    ctrl: []\n  };\n  \n  var comments = /;[^\\n]*(?:\\n|$)/g;\n  str = str.replace(comments, '');\n  \n  var reg = /@([a-z]*)(?:\\(([^)]*)\\))?/g;\n  var match;\n  var lasti = 0;\n  var out = '';\n  while((match = reg.exec(str)) !== null) {\n    var name = match[1];\n    var args = match[2] ? match[2].split(',').map(Function.call, ''.trim) : [];\n    var l = match[0].length\n    var endi = reg.lastIndex;\n    \n    out += str.substring(lasti, endi-l);\n    args.splice(0, 0, state);\n    if(!ms[name]) throw new Error('unknown command @'+name+\n      '.\\n options are: '+Object.keys(ms).\n      map(function(s){return '@'+s}).join(', '));\n    if(ms[name].length !== args.length) throw new Error('@'+name+' needs '+\n      (ms[name].length-1)+' arguments (received '+(args.length-1)+')');\n    out += ms[name].apply(null, args);\n    \n    lasti = endi;\n  }\n  out += str.substring(lasti, str.length);\n  return out;\n}\nfunction compile(str) {\n  return build(pprocess(str));\n}"],"sourceRoot":"/source/"}